From 0fd9bb6ed5196ef6d505359b4300e741d7a6c53d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tomi=20Lepp=C3=A4nen?= <tomi.leppanen@jolla.com>
Date: Fri, 7 Aug 2020 14:04:40 +0300
Subject: [PATCH] Fix deprecation errors from glib
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Tomi Lepp√§nen <tomi.leppanen@jolla.com>
---
 src/connman-network-monitor.c | 33 ++++++++++++++++-----------------
 1 file changed, 16 insertions(+), 17 deletions(-)

diff --git a/src/connman-network-monitor.c b/src/connman-network-monitor.c
index 29d4e79..0b95057 100644
--- a/src/connman-network-monitor.c
+++ b/src/connman-network-monitor.c
@@ -55,7 +55,6 @@ struct _GNetworkMonitorConnmanPrivate
 typedef struct _GNetworkMonitorConnman GNetworkMonitorConnman;
 struct _GNetworkMonitorConnman {
 	GObject parent;
-	GNetworkMonitorConnmanPrivate *priv;
 };
 
 typedef struct _GNetworkMonitorConnmanClass GNetworkMonitorConnmanClass;
@@ -90,7 +89,8 @@ G_DEFINE_DYNAMIC_TYPE_EXTENDED(GNetworkMonitorConnman,
 			G_IMPLEMENT_INTERFACE_DYNAMIC(G_TYPE_INITABLE,
 				network_monitor_initable_iface_init)
 			G_IMPLEMENT_INTERFACE_DYNAMIC(G_TYPE_NETWORK_MONITOR,
-				network_monitor_iface_init))
+				network_monitor_iface_init)
+			G_ADD_PRIVATE_DYNAMIC(GNetworkMonitorConnman))
 
 static GObject *network_monitor_constructor(GType type, guint n_props,
 						GObjectConstructParam *props)
@@ -105,15 +105,17 @@ static GObject *network_monitor_constructor(GType type, guint n_props,
 static void network_monitor_finalize(GObject *object)
 {
 	GNetworkMonitorConnman *monitor;
+	GNetworkMonitorConnmanPrivate *priv;
 
 	g_return_if_fail(object != NULL);
 	g_return_if_fail(CONNMAN_IS_NETWORK_MONITOR(object));
 
 	monitor = CONNMAN_NETWORK_MONITOR(object);
 
-	connman_manager_cleanup(monitor->priv->manager);
-	monitor->priv->manager = NULL;
-	monitor->priv->state = STATE_UNKNOWN;
+	priv = g_network_monitor_connman_get_instance_private(monitor);
+	connman_manager_cleanup(priv->manager);
+	priv->manager = NULL;
+	priv->state = STATE_UNKNOWN;
 
 	G_OBJECT_CLASS(g_network_monitor_connman_parent_class)->
 					finalize(object);
@@ -137,7 +139,8 @@ static gboolean is_available(enum connman_state state)
 
 static gboolean get_state(GNetworkMonitorConnman *monitor)
 {
-	return is_available(monitor->priv->state);
+	GNetworkMonitorConnmanPrivate *priv = g_network_monitor_connman_get_instance_private(monitor);
+	return is_available(priv->state);
 }
 
 static void get_property(GObject *object, guint prop_id,
@@ -177,9 +180,6 @@ g_network_monitor_connman_class_init(GNetworkMonitorConnmanClass *klass)
 	g_object_class_override_property(gobject_class,
 					PROP_CONNECTIVITY,
 					"connectivity");
-
-	g_type_class_add_private(gobject_class,
-				sizeof(GNetworkMonitorConnmanPrivate));
 }
 
 static void
@@ -205,6 +205,7 @@ static void property_changed(const char *property, void *value,
 							void *user_data)
 {
 	GNetworkMonitorConnman *monitor = user_data;
+	GNetworkMonitorConnmanPrivate *priv;
 	enum connman_state old_state, new_state;
 
 	if (monitor == NULL) {
@@ -212,7 +213,8 @@ static void property_changed(const char *property, void *value,
 		return;
 	}
 
-	old_state = new_state = monitor->priv->state;
+	priv = g_network_monitor_connman_get_instance_private(monitor);
+	old_state = new_state = priv->state;
 
 	if (g_strcmp0(property, "State") == 0) {
 		new_state = string2state(value);
@@ -220,7 +222,7 @@ static void property_changed(const char *property, void *value,
 	}
 
 	if (is_available(new_state) != is_available(old_state)) {
-		monitor->priv->state = new_state;
+		priv->state = new_state;
 		g_signal_emit(monitor, network_changed_signal, 0,
 							get_state(monitor));
 	}
@@ -230,10 +232,6 @@ static void g_network_monitor_connman_init(GNetworkMonitorConnman *self)
 {
 	/* Leak the module to keep it from being unloaded. */
 	g_type_plugin_use (g_type_get_plugin (CONNMAN_TYPE_NETWORK_MONITOR));
-
-	self->priv = G_TYPE_INSTANCE_GET_PRIVATE(self,
-						CONNMAN_TYPE_NETWORK_MONITOR,
-						GNetworkMonitorConnmanPrivate);
 }
 
 static gboolean network_monitor_initable_init(GInitable *initable,
@@ -241,10 +239,11 @@ static gboolean network_monitor_initable_init(GInitable *initable,
 					GError **error)
 {
 	GNetworkMonitorConnman *cm = CONNMAN_NETWORK_MONITOR(initable);
+	GNetworkMonitorConnmanPrivate *priv = g_network_monitor_connman_get_instance_private(cm);
 
-	cm->priv->manager = connman_manager_init(property_changed, cm);
+	priv->manager = connman_manager_init(property_changed, cm);
 
-	DBG("cm %p manager %p", cm, cm->priv->manager);
+	DBG("cm %p manager %p", cm, priv->manager);
 
 	return TRUE;
 }
-- 
2.26.2

